Exercise #4: Further exploring lists in the interpreter

scala> var xs: List[Int] = List.range(1, 6)
 xs.tail.head
 xs.tail.tail.tail.head
 xs.tail.tail.reverse
 xs(0)
 xs(1)
 xs(4)
 xs(5)
 xs.take(1)
 xs.take(3)
 xs.take(3).head
 xs.take(20)
 xs.takeRight(1)
 xs.takeRight(2)
 xs.takeRight(3).tail
 xs.takeRight(10).head
 xs.drop(1)
 xs.drop(2).tail
 xs.drop(100)
 xs.dropRight(2)
 xs.dropRight(1).head
var xs: List[Int] = List(1, 2, 3, 4, 5)

scala> val res28: Int = 2

scala> val res29: Int = 4

scala> val res30: List[Int] = List(5, 4, 3)

scala> val res31: Int = 1

scala> val res32: Int = 2

scala> val res33: Int = 5

scala> java.lang.IndexOutOfBoundsException: 5
  at scala.collection.LinearSeqOps.apply(LinearSeq.scala:131)
  at scala.collection.LinearSeqOps.apply$(LinearSeq.scala:128)
  at scala.collection.immutable.List.apply(List.scala:79)
  ... 32 elided

scala> val res35: List[Int] = List(1)

scala> val res36: List[Int] = List(1, 2, 3)

scala> val res37: Int = 1

scala> val res38: List[Int] = List(1, 2, 3, 4, 5)

scala> val res39: List[Int] = List(5)

scala> val res40: List[Int] = List(4, 5)

scala> val res41: List[Int] = List(4, 5)

scala> val res42: Int = 1

scala> val res43: List[Int] = List(2, 3, 4, 5)

scala> val res44: List[Int] = List(4, 5)

scala> val res45: List[Int] = List()

scala> val res46: List[Int] = List(1, 2, 3)

scala> val res47: Int = 1